// Mocks generated by Mockito 5.4.6 from annotations
// in joblinc/test/features/companypages/manage_followers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bloc/bloc.dart' as _i11;
import 'package:dio/dio.dart' as _i2;
import 'package:flutter/material.dart' as _i10;
import 'package:joblinc/features/connections/data/models/connectiondemoModel.dart'
    as _i6;
import 'package:joblinc/features/connections/data/Repo/connections_repo.dart'
    as _i3;
import 'package:joblinc/features/connections/logic/cubit/follow_cubit.dart'
    as _i4;
import 'package:joblinc/features/userprofile/data/models/follow_model.dart'
    as _i7;
import 'package:joblinc/features/userprofile/data/models/user_profile_model.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserConnectionsRepository_1 extends _i1.SmartFake
    implements _i3.UserConnectionsRepository {
  _FakeUserConnectionsRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFollowState_2 extends _i1.SmartFake implements _i4.FollowState {
  _FakeFollowState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserConnectionsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserConnectionsRepository extends _i1.Mock
    implements _i3.UserConnectionsRepository {
  MockUserConnectionsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.UserConnection>> getConnections() => (super.noSuchMethod(
        Invocation.method(
          #getConnections,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.UserConnection>>.value(<_i6.UserConnection>[]),
      ) as _i5.Future<List<_i6.UserConnection>>);

  @override
  _i5.Future<List<_i7.Follow>> getFollowing() => (super.noSuchMethod(
        Invocation.method(
          #getFollowing,
          [],
        ),
        returnValue: _i5.Future<List<_i7.Follow>>.value(<_i7.Follow>[]),
      ) as _i5.Future<List<_i7.Follow>>);

  @override
  _i5.Future<List<_i7.Follow>> getFollowers() => (super.noSuchMethod(
        Invocation.method(
          #getFollowers,
          [],
        ),
        returnValue: _i5.Future<List<_i7.Follow>>.value(<_i7.Follow>[]),
      ) as _i5.Future<List<_i7.Follow>>);

  @override
  _i5.Future<List<_i6.UserConnection>> getInvitations() => (super.noSuchMethod(
        Invocation.method(
          #getInvitations,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.UserConnection>>.value(<_i6.UserConnection>[]),
      ) as _i5.Future<List<_i6.UserConnection>>);

  @override
  _i5.Future<List<_i6.UserConnection>> getSentInvitations() =>
      (super.noSuchMethod(
        Invocation.method(
          #getSentInvitations,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.UserConnection>>.value(<_i6.UserConnection>[]),
      ) as _i5.Future<List<_i6.UserConnection>>);

  @override
  _i5.Future<_i2.Response<dynamic>> changeConnectionStatus(
    String? userId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeConnectionStatus,
          [
            userId,
            status,
          ],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #changeConnectionStatus,
            [
              userId,
              status,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> respondToConnection(
    String? userId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToConnection,
          [
            userId,
            status,
          ],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #respondToConnection,
            [
              userId,
              status,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> sendConnection(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendConnection,
          [userId],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #sendConnection,
            [userId],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> follwConnection(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #follwConnection,
          [userId],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #follwConnection,
            [userId],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<_i2.Response<dynamic>> unfollwConnection(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unfollwConnection,
          [userId],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #unfollwConnection,
            [userId],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<List<_i6.UserConnection>> getUserConnections(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserConnections,
          [userId],
        ),
        returnValue:
            _i5.Future<List<_i6.UserConnection>>.value(<_i6.UserConnection>[]),
      ) as _i5.Future<List<_i6.UserConnection>>);

  @override
  _i5.Future<List<_i6.UserConnection>> getBlockedConnections() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBlockedConnections,
          [],
        ),
        returnValue:
            _i5.Future<List<_i6.UserConnection>>.value(<_i6.UserConnection>[]),
      ) as _i5.Future<List<_i6.UserConnection>>);

  @override
  _i5.Future<String> createchat(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #createchat,
          [userId],
        ),
        returnValue: _i5.Future<String>.value(_i8.dummyValue<String>(
          this,
          Invocation.method(
            #createchat,
            [userId],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i2.Response<dynamic>> removeFollower(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFollower,
          [userId],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #removeFollower,
            [userId],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);

  @override
  _i5.Future<List<_i9.UserProfile>> searchUsers(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [keyword],
        ),
        returnValue:
            _i5.Future<List<_i9.UserProfile>>.value(<_i9.UserProfile>[]),
      ) as _i5.Future<List<_i9.UserProfile>>);
}

/// A class which mocks [FollowCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockFollowCubit extends _i1.Mock implements _i4.FollowCubit {
  @override
  _i3.UserConnectionsRepository get connectionsRepository =>
      (super.noSuchMethod(
        Invocation.getter(#connectionsRepository),
        returnValue: _FakeUserConnectionsRepository_1(
          this,
          Invocation.getter(#connectionsRepository),
        ),
        returnValueForMissingStub: _FakeUserConnectionsRepository_1(
          this,
          Invocation.getter(#connectionsRepository),
        ),
      ) as _i3.UserConnectionsRepository);

  @override
  _i4.FollowState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFollowState_2(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeFollowState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.FollowState);

  @override
  _i5.Stream<_i4.FollowState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i4.FollowState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i4.FollowState>.empty(),
      ) as _i5.Stream<_i4.FollowState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> fetchFollowing() => (super.noSuchMethod(
        Invocation.method(
          #fetchFollowing,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void unfollowConnection(
    String? userId,
    _i10.BuildContext? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #unfollowConnection,
          [
            userId,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> fetchFollowers() => (super.noSuchMethod(
        Invocation.method(
          #fetchFollowers,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void removeFollower(
    String? userId,
    _i10.BuildContext? context,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeFollower,
          [
            userId,
            context,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i4.FollowState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i11.Change<_i4.FollowState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
