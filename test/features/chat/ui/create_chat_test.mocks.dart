// Mocks generated by Mockito 5.4.6 from annotations
// in joblinc/test/features/chat/ui/create_chat_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i9;

import 'package:dio/dio.dart' as _i3;
import 'package:flutter/src/widgets/navigator.dart' as _i12;
import 'package:http_parser/http_parser.dart' as _i4;
import 'package:joblinc/features/chat/data/models/chat_model.dart' as _i7;
import 'package:joblinc/features/chat/data/models/create_chat_model.dart'
    as _i2;
import 'package:joblinc/features/chat/data/models/message_model.dart' as _i8;
import 'package:joblinc/features/chat/data/repos/chat_repo.dart' as _i5;
import 'package:joblinc/features/chat/data/services/chat_api_service.dart'
    as _i13;
import 'package:joblinc/features/connections/data/models/connectiondemoModel.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCreateChatModel_0 extends _i1.SmartFake
    implements _i2.CreateChatModel {
  _FakeCreateChatModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_1 extends _i1.SmartFake implements _i3.BaseOptions {
  _FakeBaseOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_2 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_3 extends _i1.SmartFake implements _i3.Transformer {
  _FakeTransformer_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_4 extends _i1.SmartFake implements _i3.Interceptors {
  _FakeInterceptors_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_5<T1> extends _i1.SmartFake implements _i3.Response<T1> {
  _FakeResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_6 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMediaType_7 extends _i1.SmartFake implements _i4.MediaType {
  _FakeMediaType_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepo extends _i1.Mock implements _i5.ChatRepo {
  @override
  _i6.Future<_i7.Chat>? getChatById(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #getChatById,
          [chatId],
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<_i7.Chat>?);

  @override
  _i6.Future<_i8.ChatDetail>? getChatDetails(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatDetails,
          [chatId],
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<_i8.ChatDetail>?);

  @override
  _i6.Future<void>? openChat(
    List<String>? receiverIDs,
    String? senderID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #openChat,
          [
            receiverIDs,
            senderID,
          ],
        ),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>?);

  @override
  _i6.Future<void>? deleteChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChat,
          [chatId],
        ),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>?);

  @override
  _i6.Future<void>? archiveChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #archiveChat,
          [chatId],
        ),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>?);

  @override
  _i6.Future<void>? changeTitle(
    String? chatId,
    String? chatTitle,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeTitle,
          [
            chatId,
            chatTitle,
          ],
        ),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>?);

  @override
  _i6.Future<void>? markReadOrUnread(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #markReadOrUnread,
          [chatId],
        ),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>?);

  @override
  _i6.Future<String> uploadMedia(_i9.File? file) => (super.noSuchMethod(
        Invocation.method(
          #uploadMedia,
          [file],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #uploadMedia,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #uploadMedia,
            [file],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i6.Future<List<_i11.UserConnection>> getConnections() => (super.noSuchMethod(
        Invocation.method(
          #getConnections,
          [],
        ),
        returnValue: _i6.Future<List<_i11.UserConnection>>.value(
            <_i11.UserConnection>[]),
        returnValueForMissingStub: _i6.Future<List<_i11.UserConnection>>.value(
            <_i11.UserConnection>[]),
      ) as _i6.Future<List<_i11.UserConnection>>);

  @override
  _i6.Future<_i2.CreateChatModel> createChat({
    required List<String>? receiverIds,
    String? title,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChat,
          [],
          {
            #receiverIds: receiverIds,
            #title: title,
          },
        ),
        returnValue:
            _i6.Future<_i2.CreateChatModel>.value(_FakeCreateChatModel_0(
          this,
          Invocation.method(
            #createChat,
            [],
            {
              #receiverIds: receiverIds,
              #title: title,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.CreateChatModel>.value(_FakeCreateChatModel_0(
          this,
          Invocation.method(
            #createChat,
            [],
            {
              #receiverIds: receiverIds,
              #title: title,
            },
          ),
        )),
      ) as _i6.Future<_i2.CreateChatModel>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i3.Dio {
  @override
  _i3.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_1(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeBaseOptions_1(
          this,
          Invocation.getter(#options),
        ),
      ) as _i3.BaseOptions);

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_2(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
        returnValueForMissingStub: _FakeHttpClientAdapter_2(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  _i3.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_3(
          this,
          Invocation.getter(#transformer),
        ),
        returnValueForMissingStub: _FakeTransformer_3(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i3.Transformer);

  @override
  _i3.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_4(
          this,
          Invocation.getter(#interceptors),
        ),
        returnValueForMissingStub: _FakeInterceptors_4(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i3.Interceptors);

  @override
  set options(_i3.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set transformer(_i3.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i3.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i3.Options? options,
    _i3.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i3.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i3.ProgressCallback? onReceiveProgress,
    _i3.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i3.FileAccessMode? fileAccessMode = _i3.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i3.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i3.CancelToken? cancelToken,
    _i3.Options? options,
    _i3.ProgressCallback? onSendProgress,
    _i3.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i6.Future<_i3.Response<T>> fetch<T>(_i3.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<T>>.value(_FakeResponse_5<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i6.Future<_i3.Response<T>>);

  @override
  _i3.Dio clone({
    _i3.BaseOptions? options,
    _i3.Interceptors? interceptors,
    _i3.HttpClientAdapter? httpClientAdapter,
    _i3.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clone,
          [],
          {
            #options: options,
            #interceptors: interceptors,
            #httpClientAdapter: httpClientAdapter,
            #transformer: transformer,
          },
        ),
        returnValue: _FakeDio_6(
          this,
          Invocation.method(
            #clone,
            [],
            {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDio_6(
          this,
          Invocation.method(
            #clone,
            [],
            {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            },
          ),
        ),
      ) as _i3.Dio);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i12.NavigatorObserver {
  @override
  void didPush(
    _i12.Route<dynamic>? route,
    _i12.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i12.Route<dynamic>? route,
    _i12.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i12.Route<dynamic>? route,
    _i12.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i12.Route<dynamic>? newRoute,
    _i12.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i12.Route<dynamic>? topRoute,
    _i12.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeTop,
          [
            topRoute,
            previousTopRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i12.Route<dynamic>? route,
    _i12.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatApiService extends _i1.Mock implements _i13.ChatApiService {
  @override
  _i6.Future<_i3.Response<dynamic>> getChatById(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatById,
          [chatId],
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getChatById,
            [chatId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getChatById,
            [chatId],
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> getTotalUnreadCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalUnreadCount,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getTotalUnreadCount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getTotalUnreadCount,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> getAllChats() => (super.noSuchMethod(
        Invocation.method(
          #getAllChats,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getAllChats,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getAllChats,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> getChatDetails(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatDetails,
          [chatId],
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getChatDetails,
            [chatId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getChatDetails,
            [chatId],
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> createChat({
    required List<String>? receiverIds,
    String? title,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChat,
          [],
          {
            #receiverIds: receiverIds,
            #title: title,
          },
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #createChat,
            [],
            {
              #receiverIds: receiverIds,
              #title: title,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #createChat,
            [],
            {
              #receiverIds: receiverIds,
              #title: title,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<_i3.Response<dynamic>> openChat({
    required List<String>? receiverIDs,
    required String? senderID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openChat,
          [],
          {
            #receiverIDs: receiverIDs,
            #senderID: senderID,
          },
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #openChat,
            [],
            {
              #receiverIDs: receiverIDs,
              #senderID: senderID,
            },
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #openChat,
            [],
            {
              #receiverIDs: receiverIDs,
              #senderID: senderID,
            },
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<void> deleteChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChat,
          [chatId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> archiveChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #archiveChat,
          [chatId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> changeTitle({
    required String? chatId,
    required String? chatTitle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeTitle,
          [],
          {
            #chatId: chatId,
            #chatTitle: chatTitle,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> markReadOrUnread({required String? chatId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #markReadOrUnread,
          [],
          {#chatId: chatId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Response<dynamic>> getConnections() => (super.noSuchMethod(
        Invocation.method(
          #getConnections,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getConnections,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Response<dynamic>>.value(_FakeResponse_5<dynamic>(
          this,
          Invocation.method(
            #getConnections,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Response<dynamic>>);

  @override
  _i6.Future<String> uploadMedia(_i9.File? file) => (super.noSuchMethod(
        Invocation.method(
          #uploadMedia,
          [file],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #uploadMedia,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #uploadMedia,
            [file],
          ),
        )),
      ) as _i6.Future<String>);

  @override
  _i4.MediaType getMediaType(_i9.File? file) => (super.noSuchMethod(
        Invocation.method(
          #getMediaType,
          [file],
        ),
        returnValue: _FakeMediaType_7(
          this,
          Invocation.method(
            #getMediaType,
            [file],
          ),
        ),
        returnValueForMissingStub: _FakeMediaType_7(
          this,
          Invocation.method(
            #getMediaType,
            [file],
          ),
        ),
      ) as _i4.MediaType);
}
