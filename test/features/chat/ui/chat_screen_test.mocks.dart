// Mocks generated by Mockito 5.4.6 from annotations
// in joblinc/test/features/chat/ui/chat_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i9;

import 'package:flutter_bloc/flutter_bloc.dart' as _i6;
import 'package:joblinc/core/helpers/auth_helpers/auth_service.dart' as _i10;
import 'package:joblinc/features/chat/data/models/chat_model.dart' as _i4;
import 'package:joblinc/features/chat/data/repos/chat_repo.dart' as _i2;
import 'package:joblinc/features/chat/logic/cubit/chat_cubit.dart' as _i7;
import 'package:joblinc/features/chat/logic/cubit/chat_list_cubit.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeChatRepo_0 extends _i1.SmartFake implements _i2.ChatRepo {
  _FakeChatRepo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChatListState_1 extends _i1.SmartFake implements _i3.ChatListState {
  _FakeChatListState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeChat_2 extends _i1.SmartFake implements _i4.Chat {
  _FakeChat_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ChatListCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatListCubit extends _i1.Mock implements _i3.ChatListCubit {
  @override
  _i2.ChatRepo get chatRepo => (super.noSuchMethod(
        Invocation.getter(#chatRepo),
        returnValue: _FakeChatRepo_0(
          this,
          Invocation.getter(#chatRepo),
        ),
        returnValueForMissingStub: _FakeChatRepo_0(
          this,
          Invocation.getter(#chatRepo),
        ),
      ) as _i2.ChatRepo);

  @override
  Set<String> get selectedIds => (super.noSuchMethod(
        Invocation.getter(#selectedIds),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  set chats(List<_i4.Chat>? chats) => super.noSuchMethod(
        Invocation.setter(
          #chats,
          chats,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ChatListState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeChatListState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeChatListState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ChatListState);

  @override
  _i5.Stream<_i3.ChatListState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.ChatListState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i3.ChatListState>.empty(),
      ) as _i5.Stream<_i3.ChatListState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> getAllChats() => (super.noSuchMethod(
        Invocation.method(
          #getAllChats,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> reloadChats() => (super.noSuchMethod(
        Invocation.method(
          #reloadChats,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.Chat> getChatById(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #getChatById,
          [chatId],
        ),
        returnValue: _i5.Future<_i4.Chat>.value(_FakeChat_2(
          this,
          Invocation.method(
            #getChatById,
            [chatId],
          ),
        )),
        returnValueForMissingStub: _i5.Future<_i4.Chat>.value(_FakeChat_2(
          this,
          Invocation.method(
            #getChatById,
            [chatId],
          ),
        )),
      ) as _i5.Future<_i4.Chat>);

  @override
  _i5.Future<void> getChatDetails(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #getChatDetails,
          [chatId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void searchChats(String? query) => super.noSuchMethod(
        Invocation.method(
          #searchChats,
          [query],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addNewChat(_i4.Chat? chat) => super.noSuchMethod(
        Invocation.method(
          #addNewChat,
          [chat],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addNewMessage() => super.noSuchMethod(
        Invocation.method(
          #addNewMessage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filteredChats(bool? onlyUnread) => super.noSuchMethod(
        Invocation.method(
          #filteredChats,
          [onlyUnread],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleSelection(String? chatId) => super.noSuchMethod(
        Invocation.method(
          #toggleSelection,
          [chatId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSelection() => super.noSuchMethod(
        Invocation.method(
          #clearSelection,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> markReadOrUnreadSelected(bool? markRead) =>
      (super.noSuchMethod(
        Invocation.method(
          #markReadOrUnreadSelected,
          [markRead],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteSelected() => (super.noSuchMethod(
        Invocation.method(
          #deleteSelected,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> archiveSelected() => (super.noSuchMethod(
        Invocation.method(
          #archiveSelected,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void setTyping(
    String? chatId,
    bool? isTyping,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setTyping,
          [
            chatId,
            isTyping,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateChatCard(Map<String, dynamic>? data) => super.noSuchMethod(
        Invocation.method(
          #updateChatCard,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void emit(_i3.ChatListState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i6.Change<_i3.ChatListState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ChatCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatCubit extends _i1.Mock implements _i7.ChatCubit {
  @override
  _i2.ChatRepo get chatRepo => (super.noSuchMethod(
        Invocation.getter(#chatRepo),
        returnValue: _FakeChatRepo_0(
          this,
          Invocation.getter(#chatRepo),
        ),
        returnValueForMissingStub: _FakeChatRepo_0(
          this,
          Invocation.getter(#chatRepo),
        ),
      ) as _i2.ChatRepo);

  @override
  _i7.ChatState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i8.dummyValue<_i7.ChatState>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _i8.dummyValue<_i7.ChatState>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i7.ChatState);

  @override
  _i5.Stream<_i7.ChatState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i7.ChatState>.empty(),
        returnValueForMissingStub: _i5.Stream<_i7.ChatState>.empty(),
      ) as _i5.Stream<_i7.ChatState>);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> uploadMedia(_i9.File? file) => (super.noSuchMethod(
        Invocation.method(
          #uploadMedia,
          [file],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void emit(_i7.ChatState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onChange(_i6.Change<_i7.ChatState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i10.AuthService {
  @override
  bool get isLoggedInUser => (super.noSuchMethod(
        Invocation.getter(#isLoggedInUser),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isLoggedInUser(bool? _isLoggedInUser) => super.noSuchMethod(
        Invocation.setter(
          #isLoggedInUser,
          _isLoggedInUser,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> saveAuthInfo({
    required String? accessToken,
    required String? refreshToken,
    required int? role,
    required String? userId,
    required String? email,
    required bool? confirmed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAuthInfo,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #role: role,
            #userId: userId,
            #email: email,
            #confirmed: confirmed,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveTokens({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTokens,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #getUserInfo,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<String?> getRole() => (super.noSuchMethod(
        Invocation.method(
          #getRole,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<String?> getEmail() => (super.noSuchMethod(
        Invocation.method(
          #getEmail,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> getConfirmationStatus() => (super.noSuchMethod(
        Invocation.method(
          #getConfirmationStatus,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> clearUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #clearUserInfo,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateConfirmationStatus(bool? confirmed) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateConfirmationStatus,
          [confirmed],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> refreshToken({String? companyId}) => (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
          {#companyId: companyId},
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> checkIfLoggedInUser() => (super.noSuchMethod(
        Invocation.method(
          #checkIfLoggedInUser,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
